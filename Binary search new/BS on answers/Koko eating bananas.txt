//875. Koko eating bananas

class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {

       int maxEle = piles[0], n = piles.size();

       //to find the greatest ele in the piles
       for(int i = 1; i<n; i++)
       {
           if(piles[i]>maxEle)
            maxEle = piles[i];
       }


       //k will range from 1 to maxEle
       int left = 1, right = maxEle;
        double  ans = maxEle;

       while(left<=right)
       {
            int mid = (left+right)/2;

             double hrs = 0;

            for(int i = 0; i<n; i++)
            {                               
                if(piles[i]<=mid)
                {
                    hrs++;
                }
                else if(piles[i]>mid)                
                {
                    hrs = hrs+ ceil(piles[i]/( double)mid);                    
                }
                if(hrs>h)
                {
                    left = mid+1;
                    break;
                }
                
            }

            if(hrs<=h)
            {
                ans = min(ans, ( double)mid);                
                right = mid-1;
            }

       }
       
       return ans;

    }
};