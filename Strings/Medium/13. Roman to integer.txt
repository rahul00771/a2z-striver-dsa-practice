//13. Roman to integer

class Solution {
public:

    int romanToInt(string s) {
        
        //approach1: using multiple if else or switch
        //approach 2: if currVal is less than nextVal -> subtract, else add

        int n = s.length(), ans = 0;

        for(int i = 0; i<n; i++)
        {
            if(s[i] == 'M')
                ans = ans+1000;
            else if(s[i] == 'D')
                ans = ans+ 500;
            
            //if we find C check for next ele
            else if(s[i] == 'C')
            {
                if( i<n-1 && (s[i+1] == 'D'))
                {
                    ans = ans + 400;
                    i++;
                }
                else if(i<n-1 && (s[i+1] == 'M'))
                {
                    ans = ans + 900;
                    i++;
                }
                else
                    ans = ans + 100;
            }
            else if(s[i] == 'L')
                ans = ans+ 50;
            
            //if we find X check for next ele
            else if(s[i] == 'X')
            {
                if( i<n-1 && (s[i+1] == 'L'))
                {
                    ans = ans + 40;
                    i++;
                }
                else if(i<n-1 && (s[i+1] == 'C'))
                {
                    ans = ans + 90;
                    i++;
                }
                else
                    ans = ans + 10;
            }
            else if(s[i] == 'V')
                ans = ans+ 5;
            
            //if we find V check for next ele
            else if(s[i] == 'I')
            {
                if( i<n-1 && (s[i+1] == 'V'))
                {
                    ans = ans + 4;
                    i++;
                }
                else if(i<n-1 && (s[i+1] == 'X'))
                {
                    ans = ans + 9;
                    i++;
                }
                else
                    ans = ans + 1;
            }

        }

        // unordered_map<char, int> m;
        
        // m['I'] = 1;
        // m['V'] = 5;
        // m['X'] = 10;
        // m['L'] = 50;
        // m['C'] = 100;
        // m['D'] = 500;
        // m['M'] = 1000;

        // for(int i = 0; i<n; i++)
        // {
        //     if(m[s[i]] < m[s[i+1]])
        //         ans -= m[s[i]];
        //     else
        //         ans += m[s[i]];
        // }

        return ans;

    }
};