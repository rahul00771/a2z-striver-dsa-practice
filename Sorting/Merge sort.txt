//Merge sort




void merge(vector<int>&a, int l, int mid, int r)
{
    vector<int> temp;
    int i = l, j = mid+1;
    while(i<=mid && j<=r)
    {
        if(a[i]<=a[j])
        {
            temp.push_back(a[i]);
            i++;
        }
        else
        {
            temp.push_back(a[j]);
            j++;
        }
    }

    while (i <= mid) {
        temp.push_back(a[i]);
        i++;
    }

    //  if elements on the right half are still left //
    while (j <= r) {
        temp.push_back(a[j]);
        j++;
    }

     for (int u = l; u <= r; u++) {
        a[u] = temp[u - l];
    }
}

void mergeSort(vector<int>& a, int l, int r) {
    
    if(l>=r)
        return;
    int mid = (l+r)/2;
    mergeSort(a, l, mid);
    mergeSort(a, mid+1, r);
    merge(a, l, mid, r);
    
    
}